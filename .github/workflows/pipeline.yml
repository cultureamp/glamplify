name: pipeline
on: push

env:
  goLangVersion: '1.15.7'

jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install GO
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: ${{ env.goLangVersion }}
      - name: GOLangCI-Lint
        # https://golangci-lint.run/usage/configuration/  https://golangci-lint.run/usage/linters/
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.36.0
          golangci-lint run --verbose

  go-sec:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: ${{ env.goLangVersion }}

      - name: Run Gosec Security Scanner
        env:
          GO111MODULE: on
        # https://securego.io/docs/rules/rule-intro.html
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go get -u github.com/securego/gosec/v2/cmd/gosec@v2.8.0
          gosec -fmt json -out gosec-results.json -conf gosec-config.json -stdout ./...
  
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: gosec-results
          path: gosec-results.json

  go-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install GO
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: ${{ env.goLangVersion }}
      - name: GOTest
        run: |
          go test ./...

  go-cover:
    needs: [go-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install GO
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: ${{ env.goLangVersion }}
      - name: GOCover
        run: |
          go test ./... -covermode=count -coverprofile=count.out
          go tool cover -func=count.out

  go-build:
    needs: [go-cover,go-lint,go-sec]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install GO
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: ${{ env.goLangVersion }}
      - name: GOBuild
        run: |
          GOARCH=amd64 GOOS=linux go build -ldflags="-s -w" -o main

      - name: Create tag std
        if: false # disable for now
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/tagname",
              sha: context.sha
            })

  sca: # project must be built to run Snyk
    needs: [go-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: snyk/actions/setup@master

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: ${{ env.goLangVersion }}

      - name: Run Snyk SCA
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        # https://support.snyk.io/hc/en-us/articles/360003812578-CLI-reference
        run: |
          snyk auth "$SNYK_TOKEN"
          snyk test \
            --severity-threshold=medium \
            --fail-on=upgradable \
            --org=cultureamp \
            --show-vulnerable-paths=some \
            --json --json-file-output=snyk-results.json \
            --policy-path=.snyk
  
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: snyk-results
          path: snyk-results.json

  tag-master:
    needs: [sca]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create version tag for master
        uses: anothrNick/github-tag-action@1.26.0
        env: # https://github.com/anothrNick/github-tag-action
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: master
