name: pipeline
on: push

env:
  GO_VERSION: '1.17.1'

jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: ${{ env.GO_VERSION }}

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.42.1

  go-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: ${{ env.GO_VERSION }}

      - name: Dependency cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('src/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test
        run: |
          go test ./... -covermode=count -coverprofile=count.out
          go tool cover -func=count.out

  go-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: ${{ env.GO_VERSION }}

      - name: Dependency cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('src/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: |
          GOARCH=amd64 GOOS=linux go build -ldflags="-s -w" -o main

      - name: Create tag std
        if: false # disable for now
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/tagname",
              sha: context.sha
            })

  # sca:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - uses: snyk/actions/setup@master

  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Install Go
  #       uses: actions/setup-go@v2
  #       with:
  #         stable: 'true'
  #         go-version: ${{ env.GO_VERSION }}

  #     - name: Run Snyk SCA
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       # https://support.snyk.io/hc/en-us/articles/360003812578-CLI-reference
  #       run: |
  #         snyk auth "$SNYK_TOKEN"
  #         snyk test \
  #           --severity-threshold=medium \
  #           --fail-on=upgradable \
  #           --org=cultureamp \
  #           --show-vulnerable-paths=some \
  #           --json --json-file-output=snyk-results.json \
  #           --policy-path=.snyk

  #     - uses: actions/upload-artifact@v2
  #       if: always()
  #       with:
  #         name: snyk-results
  #         path: snyk-results.json

  tag-master:
    needs: [go-lint,go-test,go-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create version tag for master
        uses: anothrNick/github-tag-action@1.26.0
        env: # https://github.com/anothrNick/github-tag-action
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: master
