name: pipeline
on: [push, pull_request]

jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install GO
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: '1.15.5'
      - name: GOLangCI-Lint
        # https://golangci-lint.run/usage/configuration/  https://golangci-lint.run/usage/linters/
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.33.0
          golangci-lint run --tests=false --disable-all --enable=deadcode --enable=gosimple --enable=govet --enable=ineffassign --enable=staticcheck --enable=structcheck --enable=unused --enable=varcheck --enable=bodyclose --enable=depguard --enable=dogsled --enable=dupl --enable=errorlint --enable=exportloopref --enable=funlen --enable=gochecknoinits --enable=gocognit --enable=goconst

  go-sec:
    needs: [go-lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install GO
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: '1.15.5'
      - name: GOSec
        # https://golangci-lint.run/usage/configuration/  https://golangci-lint.run/usage/linters/
        run: |
          curl -sSfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.5.0
          gosec -include=G101,G102,G103,G106,G107,G108,G109,G110,G201,G202,G203,G204,G301,G302,G303,G304,G305,G306,G307,G401,G402,G403,G404,G501,G502,G503,G504,G505,G601  ./...

  go-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install GO
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: '1.15.5'
      - name: GOTest
        run: |
          go test ./...

  go-cover:
    needs: [go-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install GO
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: '1.15.5'
      - name: GOCover
        run: |
          go test ./... -covermode=count -coverprofile=count.out
          go tool cover -func=count.out

  go-build:
    needs: [go-cover,go-sec]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install GO
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: '1.15.5'
      - name: GOBuild
        run: |
          GOARCH=amd64 GOOS=linux go build -ldflags="-s -w" -o main

      - name: Create tag std
        if: false # disable for now
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/tagname",
              sha: context.sha
            })

  tag-master:
    needs: [go-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create tag an
        uses: anothrNick/github-tag-action@1.26.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: master
